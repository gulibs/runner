name: Build and Test Windows exe (PyInstaller, sklearn==0.24.1)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test-windows:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Show python & OS info (debug)
        run: |
          python -V
          where python
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
        shell: pwsh

      - name: Install build dependencies (compatible with sklearn 0.24.1)
        run: |
          python -m pip install --upgrade pip
          # Install specific versions to match model's sklearn 0.24.1 environment.
          pip install numpy==1.19.5 pandas==1.1.5 scikit-learn==0.24.1 joblib==1.0.1 threadpoolctl==2.1.0
          # Install PyInstaller for packaging
          pip install pyinstaller==5.9
        shell: pwsh

      - name: Build with PyInstaller (one-file)
        run: |
          # Single-line to avoid PowerShell line-continuation pitfalls.
          pyinstaller --onefile --noconfirm --clean --collect-submodules sklearn --collect-submodules pandas --collect-submodules numpy --collect-data sklearn --collect-data pandas --collect-binaries numpy --add-data "model\\RF_binary_v1.pickle;model" model\\run.py
        shell: pwsh
        timeout-minutes: 30

      - name: List dist folder (debug)
        run: |
          Write-Host "Dist contents:"
          Get-ChildItem -Recurse -Force dist | Format-Table -AutoSize
        shell: pwsh

      - name: Ensure test CSV exists
        run: |
          $csv = Join-Path $PWD "model\example.csv"
          if (-not (Test-Path $csv)) {
            Write-Error "Test CSV not found at $csv - please add model/example.csv to repo or fetch it earlier in workflow."
            exit 1
          }
          Write-Host "Found test CSV: $csv"
        shell: pwsh

      - name: Run exe for test and capture output
        run: |
          $exe = Join-Path $PWD "dist\run.exe"
          $csv = Join-Path $PWD "model\example.csv"
          if (-not (Test-Path $exe)) {
            Write-Error "Built exe not found: $exe"
            exit 1
          }
          Write-Host "Running: $exe $csv"
          # Capture both stdout and stderr to run-output.txt
          & $exe $csv *> run-output.txt
          $code = $LASTEXITCODE
          Write-Host "Exit code: $code"
          Write-Host "------ run-output.txt ------"
          Get-Content run-output.txt | ForEach-Object { Write-Host $_ }
          Write-Host "----------------------------"
          if ($code -ne 0) {
            Write-Error "Executable exited with code $code. See run-output.txt for details."
            exit $code
          }
        shell: pwsh
        timeout-minutes: 10

      - name: Upload build & test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: run-windows-exe-and-output
          path: |
            dist/run.exe
            run-output.txt
